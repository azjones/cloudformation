AWSTemplateFormatVersion: '2010-09-09'
Description: Vpc Stack, 2 Availability Zones
Parameters:
  Octal:
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 255
    Description: Octet value of Vpc Cidr
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub '10.${Octal}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: 'Vpc, 2 Availability Zones'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '10.${Octal}.0.0/16'
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  NatGatewayA:
    DependsOn: VpcGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt
        - ElasticIPA
        - AllocationId
      SubnetId: !Ref PublicSubnetA
  ElasticIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayB:
    DependsOn: VpcGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt
        - ElasticIPB
        - AllocationId
      SubnetId: !Ref PublicSubnetB
  ElasticIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Sub '10.${Octal}.1.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Public Subnet Zone A
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Sub '10.${Octal}.2.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Public Subnet Zone B
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Sub '10.${Octal}.3.0/24'
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Private Subnet Zone A
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Sub '10.${Octal}.4.0/24'
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Zone B private subnet
  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Zone A Public Route Table
  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Zone B Public Route Table
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Zone A Private Route Table
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Zone B Private Route Table
  PublicRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTableA
  PublicRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTableB
  PrivateRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA
  PrivateRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB
  PublicRouteTableInternetRouteA:
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTableInternetRouteB:
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrivateRouteTableInternetRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  PrivateRouteTableInternetRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Public Network ACL
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: Private Network ACL
  PublicSubnetNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      NetworkAclId: !Ref PublicNetworkAcl
  PublicSubnetNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      NetworkAclId: !Ref PublicNetworkAcl
  PrivateSubnetNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      NetworkAclId: !Ref PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      NetworkAclId: !Ref PrivateNetworkAcl
  PublicInboundNetworkAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  PublicOutboundNetworkAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  PrivateInboundNetworkAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  PrivateOutboundNetworkAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
Outputs:
  Vpc:
    Value: !Ref Vpc
    Export:
      Name: Vpc
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: PublicSubnetA
  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: PublicSubnetB
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: PrivateSubnetA
  PrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export:
      Name: PrivateSubnetB
  PublicRouteTableA:
    Value: !Ref PublicRouteTableA
    Export:
      Name: PublicRouteTableA
  PublicRouteTableB:
    Value: !Ref PublicRouteTableB
    Export:
      Name: PublicRouteTableB
  PrivateRouteTableA:
    Value: !Ref PrivateRouteTableA
    Export:
      Name: PrivateRouteTableA
  PrivateRouteTableB:
    Value: !Ref PrivateRouteTableB
    Export:
      Name: PrivateRouteTableB
